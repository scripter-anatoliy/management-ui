{"version":3,"sources":["components/Navbar/Navbar.tsx","api/users-api.ts","redux/users-reducer.tsx","components/Users/User/User.tsx","components/Users/Users.tsx","components/Users/AddUser/AddUser.tsx","components/Users/Post/Posts.tsx","App.tsx","reportWebVitals.ts","redux/store.tsx","index.tsx","components/Users/AddUser/AddUser.module.css","components/Users/Users.module.css","components/Users/Post/Posts.module.css","components/Navbar/Navbar.module.css"],"names":["Navbar","props","location","useLocation","className","n","nav","item","to","activeClassName","activeLink","pathname","Button","color","onClick","setModal","instance","axios","create","baseURL","withCredentials","UsersAPI","get","createUser","Promise","resolve","data","user","initialState","users","posts","usersReducer","state","action","type","map","u","id","length","name","username","email","address","phone","website","company","User","useState","isModalOpen","setIsModalOpen","dispatch","useDispatch","formik","useFormik","initialValues","street","suite","city","zipcode","lat","geo","lng","companyName","catchPhrase","bs","onSubmit","then","res","editUsersAC","resetForm","m","editIcon","addressGeo","Modal","modal","open","modalContainer","handleSubmit","field","placeholder","editField","TextField","input","getFieldProps","variant","style","float","Users","useSelector","useEffect","setUsersAC","wrapper","index","usersCards","AddUser","addUserAC","withRouter","userId","useParams","setPostsAC","filterPosts","filter","post","p","title","body","App","AppBar","position","Toolbar","IconButton","edge","aria-label","Menu","Typography","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","storeRedux","createStore","applyMiddleware","thunkMiddleware","window","store","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.19a2b5af.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink, useLocation} from 'react-router-dom';\nimport n from './Navbar.module.css';\nimport {Button} from \"@material-ui/core\";\n\ntype PropsType = {\n    setModal: (modal: boolean) => void\n}\n\nconst Navbar = (props: PropsType) => {\n\n    interface LocationState {\n        from: {\n            pathname: string;\n        };\n    }\n\n    const location = useLocation<LocationState>();\n\n    return (\n        <nav className={n.nav}>\n            <div className={n.item}>\n                <NavLink to=\"/users\" activeClassName={n.activeLink}>Users</NavLink>\n                {\n                    location.pathname === \"/users\" &&\n                    <Button color=\"secondary\"\n                            onClick={() => {\n                                props.setModal(true)\n                            }}>Add User</Button>\n                }\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar;","import axios from \"axios\";\nimport {CreateUserType, PostsType, UserType} from \"../redux/users-reducer\";\n\nconst instance = axios.create({\n    baseURL: 'https://jsonplaceholder.typicode.com/',\n    withCredentials: true,\n})\n\n// api\nexport const UsersAPI = {\n    getUsers() {\n        return instance.get<Array<UserType>>('users')\n    },\n    createUsers(createUser: CreateUserType) {\n        return Promise.resolve({data: createUser})\n    },\n    changeUsers(user: UserType) {\n        return Promise.resolve({data: user})\n    },\n    getPosts() {\n        return instance.get<Array<PostsType>>('posts')\n    },\n}\n","import {Dispatch} from \"react\";\r\nimport {UsersAPI} from \"../api/users-api\";\r\n\r\nexport type SetUsersACType = ReturnType<typeof setUsersAC>;\r\nexport type SetPotsACType = ReturnType<typeof setPostsAC>;\r\nexport type AddUserACType = ReturnType<typeof addUserAC>;\r\nexport type EditUsersACType = ReturnType<typeof editUsersAC>;\r\ntype ActionType = SetUsersACType\r\n    | SetPotsACType\r\n    | EditUsersACType\r\n    | AddUserACType\r\nexport type PostsType = {\r\n    userId: number,\r\n    id: number,\r\n    title: string,\r\n    body: string\r\n}\r\nexport type CompanyType = {\r\n    name: string,\r\n    catchPhrase: string,\r\n    bs: string\r\n}\r\nexport type GeoType = {\r\n    lat: string,\r\n    lng: string\r\n}\r\nexport type AddressType = {\r\n    street: string,\r\n    suite: string,\r\n    city: string,\r\n    zipcode: string,\r\n    geo: GeoType\r\n}\r\nexport type UserType = {\r\n    id: number,\r\n    name: string,\r\n    username: string,\r\n    email: string,\r\n    address: AddressType,\r\n    phone: string,\r\n    website: string,\r\n    company: CompanyType\r\n}\r\nexport type InitialStateType = {\r\n    users: Array<UserType>,\r\n    posts: Array<PostsType>\r\n}\r\n\r\nlet initialState = {\r\n    users: [],\r\n    posts: []\r\n}\r\n\r\nconst usersReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_USERS':\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        case 'EDIT_USERS':\r\n            return {\r\n                ...state,\r\n                users: state.users.map((u) => {\r\n                    if (u.id === action.id) {\r\n                        return {...u, ...action.user}\r\n                    } else {\r\n                        return u\r\n                    }\r\n                })\r\n            }\r\n        case 'SET_POSTS':\r\n            return {\r\n                ...state,\r\n                posts: [...action.posts]\r\n            }\r\n        case \"ADD_USER\":\r\n            return {\r\n                ...state,\r\n                users: [...state.users, {\r\n                    id: state.users.length + 1,\r\n                    name: action.createUser.name,\r\n                    username: action.createUser.username,\r\n                    email: action.createUser.email,\r\n                    address: action.createUser.address,\r\n                    phone: action.createUser.phone,\r\n                    website: action.createUser.website,\r\n                    company: action.createUser.company\r\n                }]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUsersAC = (users: Array<UserType>) => ({type: 'SET_USERS', users} as const)\r\nexport const addUserAC = (createUser: CreateUserType) => (\r\n    {type: 'ADD_USER', createUser} as const)\r\nexport const editUsersAC = (user: UserType, id: number) => ({type: 'EDIT_USERS', user, id} as const)\r\nexport const setPostsAC = (posts: Array<PostsType>) => ({type: 'SET_POSTS', posts} as const)\r\n\r\nexport type CreateUserType = {\r\n    name: string, username: string,\r\n    email: string, address: AddressType,\r\n    phone: string, website: string, company: CompanyType\r\n}\r\n\r\n// Thunk\r\nexport const setUsers = () => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        UsersAPI.getUsers().then(res => {\r\n            let users = res.data\r\n            dispatch(setUsersAC(users))\r\n        })\r\n    }\r\n}\r\nexport const addUsers = (createUser: CreateUserType) => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        UsersAPI.createUsers(createUser).then(res => {\r\n            dispatch(addUserAC(res.data))\r\n        })\r\n    }\r\n}\r\nexport const editUsers = (user: any, id: number) => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        UsersAPI.changeUsers(user).then(res => {\r\n            dispatch(editUsersAC(res.data, id))\r\n        })\r\n    }\r\n}\r\nexport const setPosts = () => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        UsersAPI.getPosts().then(res => {\r\n            let posts = res.data\r\n            dispatch(setPostsAC(posts))\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;","import React, {useState} from \"react\";\r\nimport {editUsers, UserType} from \"../../../redux/users-reducer\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useFormik} from \"formik\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport u from '../Users.module.css';\r\nimport EditSharpIcon from '@material-ui/icons/EditSharp';\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport m from '../AddUser/AddUser.module.css';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n}\r\n\r\n\r\nexport let User = (props: PropsType) => {\r\n\r\n    const [isModalOpen, setIsModalOpen] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onClose = () => {\r\n        setIsModalOpen(false)\r\n        formik.resetForm()\r\n    }\r\n    const editFields = [\r\n        {field: 'name', placeholder: 'name'},\r\n        {field: 'username', placeholder: 'UserName'},\r\n        {field: 'email', placeholder: 'Email'},\r\n        {field: 'street', placeholder: 'Street'},\r\n        {field: 'suite', placeholder: 'Suite'},\r\n        {field: 'city', placeholder: 'City'},\r\n        {field: 'zipcode', placeholder: 'Zipcode'},\r\n        {field: 'lat', placeholder: 'lat'},\r\n        {field: 'lng', placeholder: 'lng'},\r\n        {field: 'phone', placeholder: 'Phone'},\r\n        {field: 'website', placeholder: 'Website'},\r\n        {field: 'companyName', placeholder: 'CompanyName'},\r\n        {field: 'catchPhrase', placeholder: 'CatchPhrase'},\r\n        {field: 'bs', placeholder: 'bs'},\r\n    ]\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: props.user.name,\r\n            username: props.user.username,\r\n            email: props.user.email,\r\n            street: props.user.address.street,\r\n            suite: props.user.address.suite,\r\n            city: props.user.address.city,\r\n            zipcode: props.user.address.zipcode,\r\n            lat: props.user.address.geo.lat,\r\n            lng: props.user.address.geo.lng,\r\n            phone: props.user.phone,\r\n            website: props.user.website,\r\n            companyName: props.user.company.name,\r\n            catchPhrase: props.user.company.catchPhrase,\r\n            bs: props.user.company.bs,\r\n        },\r\n        onSubmit: ({name, email, bs, catchPhrase, username, street, suite, city, zipcode, phone, website, companyName, lat, lng}) => {\r\n\r\n            let newUser = {\r\n                name, username, email, phone, website,\r\n                company: {name: companyName, catchPhrase, bs},\r\n                address: {\r\n                    street, suite, city, zipcode,\r\n                    geo: {lat, lng}\r\n                }\r\n            }\r\n            dispatch(editUsers(newUser, props.user.id))\r\n            setIsModalOpen(false)\r\n            formik.resetForm()\r\n        },\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <EditSharpIcon className={m.editIcon} color='primary' onClick={() => {\r\n                setIsModalOpen(true)\r\n            }}/>\r\n            <div className={m.name}>\r\n                <div>Name: {props.user.name}</div>\r\n                <div>User Name: {props.user.username}</div>\r\n                <div>Email: {props.user.email}</div>\r\n            </div>\r\n            <p><h2>Address:</h2></p>\r\n            <div>Street: {props.user.address.street}</div>\r\n            <div>Suite: {props.user.address.suite}</div>\r\n            <div>City: {props.user.address.city}</div>\r\n            <div>Zipcode: {props.user.address.zipcode}</div>\r\n            <div className={m.addressGeo}>\r\n                <p><h3>geo: </h3></p>\r\n                <div>lat: {props.user.address.geo.lat}</div>\r\n                <div>lng: {props.user.address.geo.lng}</div>\r\n            </div>\r\n            <div>Phone: {props.user.phone}</div>\r\n            <div>Website: {props.user.website}</div>\r\n            <p><h2>Company:</h2></p>\r\n            <div>Name: {props.user.company.name}</div>\r\n            <div>CatchPhrase: {props.user.company.catchPhrase}</div>\r\n            <div>bs: {props.user.company.bs}</div>\r\n            <NavLink to={`/posts/${props.user.id}`} activeClassName={u.activeLink}>Подробнее...</NavLink>\r\n\r\n            {isModalOpen &&\r\n            <Modal className={m.modal} open={isModalOpen}>\r\n                <div className={m.modalContainer}>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        {editFields.map(editField => {\r\n                            return <TextField className={m.input}\r\n                                              placeholder={editField.placeholder}\r\n                                              {...formik.getFieldProps(editField.field)}/>\r\n                        })}\r\n                        <Button variant=\"outlined\" color=\"primary\" type=\"submit\">Edit</Button>\r\n                        <Button style={{float: \"right\"}} variant=\"outlined\"\r\n                                color=\"secondary\" onClick={onClose}>Close</Button>\r\n                    </form>\r\n                </div>\r\n            </Modal>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport {setUsers, UserType} from \"../../redux/users-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../redux/store\";\r\nimport u from './Users.module.css';\r\nimport {User} from \"./User/User\";\r\n\r\nlet Users = () => {\r\n\r\n    const users = useSelector<RootState, Array<UserType>>(state => state.users.users)\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(setUsers())\r\n    }, [])\r\n\r\n    return (\r\n        <div className={u.wrapper}>\r\n            <div>\r\n                {users.map((user, index) => {\r\n                    return (\r\n                        <div className={u.users}>\r\n                            <div className={u.usersCards}>\r\n                                <User user={user}/>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Users","import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addUsers} from \"../../../redux/users-reducer\";\r\nimport {Button, Modal} from \"@material-ui/core\";\r\nimport m from './AddUser.module.css';\r\nimport {useFormik,} from \"formik\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nfunction AddUser(props: { open: boolean, setModal: (open: boolean) => void }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onClose = () => {\r\n        props.setModal(false)\r\n        formik.resetForm()\r\n\r\n    }\r\n    const fields = [\r\n        {field: 'name', placeholder: 'Name'},\r\n        {field: 'username', placeholder: 'UserName'},\r\n        {field: 'email', placeholder: 'Email'},\r\n        {field: 'street', placeholder: 'Street'},\r\n        {field: 'suite', placeholder: 'Suite'},\r\n        {field: 'city', placeholder: 'City'},\r\n        {field: 'zipcode', placeholder: 'Zipcode'},\r\n        {field: 'lat', placeholder: 'lat'},\r\n        {field: 'lng', placeholder: 'lng'},\r\n        {field: 'phone', placeholder: 'Phone'},\r\n        {field: 'website', placeholder: 'Website'},\r\n        {field: 'companyName', placeholder: 'CompanyName'},\r\n        {field: 'catchPhrase', placeholder: 'CatchPhrase'},\r\n        {field: 'bs', placeholder: 'bs'},\r\n    ]\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            username: '',\r\n            email: '',\r\n            street: '',\r\n            suite: '',\r\n            lat: '',\r\n            lng: '',\r\n            phone: '',\r\n            website: '',\r\n            companyName: '',\r\n            catchPhrase: '',\r\n            bs: '',\r\n            city: '',\r\n            zipcode: ''\r\n        },\r\n        onSubmit: ({name, email, bs, catchPhrase, username, street, suite, city, zipcode, phone, website, companyName, lat, lng}) => {\r\n            dispatch(addUsers({\r\n                name, username, email, phone, website,\r\n                company: {name: companyName, catchPhrase, bs},\r\n                address: {\r\n                    street, suite, city, zipcode,\r\n                    geo: {lat, lng}\r\n                }\r\n            }))\r\n            props.setModal(false)\r\n            formik.resetForm()\r\n        },\r\n    })\r\n\r\n    return <Modal className={m.modal} open={props.open}>\r\n        <div className={m.modalContainer}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                {fields.map(field => <TextField className={m.input}\r\n                                                placeholder={field.placeholder} {...formik.getFieldProps(field.field)}/>)}\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">Add</Button>\r\n                <Button style={{float: \"right\"}} variant=\"contained\"\r\n                        color=\"secondary\" onClick={onClose}>Close</Button>\r\n            </form>\r\n        </div>\r\n    </Modal>;\r\n}\r\n\r\nexport default AddUser","import React, {useEffect} from \"react\";\r\nimport {PostsType, setPosts} from \"../../../redux/users-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../../redux/store\";\r\nimport p from './Posts.module.css';\r\nimport {useParams, withRouter} from \"react-router-dom\";\r\n\r\nlet Posts = () => {\r\n\r\n    const posts = useSelector<RootState, Array<PostsType>>(state => state.users.posts)\r\n    const {userId} = useParams<{ userId: string }>()\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(setPosts())\r\n    }, [])\r\n\r\n    const filterPosts = posts.filter((post) => {\r\n        return post.userId === +userId\r\n    })\r\n\r\n\r\n    return (\r\n        <div className={p.wrapper}>\r\n\r\n            {filterPosts.map((post) => {\r\n                return (\r\n                    <div className={p.posts}>\r\n                        <div className={p.post} key={post.id}>\r\n                            <div className={p.title}>{post.title}</div>\r\n                            <div>body: {post.body}</div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(Posts)","import React, {useState} from 'react';\nimport {Route} from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport Users from './components/Users/Users';\nimport {AppBar, Button, IconButton, Toolbar} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Menu} from \"@material-ui/icons\";\nimport AddUser from \"./components/Users/AddUser/AddUser\";\nimport Posts from \"./components/Users/Post/Posts\";\n\nfunction App() {\n\n    const [modal, setModal] = useState(false)\n\n    return (\n        <div className=\"app-wrapper\">\n            <div className=\"appbar-wrapper\">\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                            <Menu/>\n                        </IconButton>\n                        <Typography variant=\"h6\">\n                            News\n                        </Typography>\n                        <Button color=\"inherit\" className=\"login\">Login</Button>\n                    </Toolbar>\n                </AppBar>\n            </div>\n            <Navbar setModal={setModal}/>\n            <div className=\"app-wrapper-content\">\n                <AddUser open={modal} setModal={setModal}/>\n                <Route exact path='/users' render={() => <Users/>}/>\n                <Route exact path='/posts/:userId' render={() => <Posts/>}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nlet reducers = combineReducers({\r\n    users: usersReducer,\r\n\r\n})\r\nexport type RootState = ReturnType<typeof reducers>\r\n\r\nlet storeRedux = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = storeRedux\r\nexport default storeRedux","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport storeRedux from \"./redux/store\";\n\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={storeRedux}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"AddUser_modal__2AtrO\",\"modalContainer\":\"AddUser_modalContainer__29DWB\",\"input\":\"AddUser_input__Kelet\",\"editIcon\":\"AddUser_editIcon__3pNxM\",\"name\":\"AddUser_name__3eSRZ\",\"addressGeo\":\"AddUser_addressGeo__16WRw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Users_wrapper__jkIY_\",\"users\":\"Users_users__2Yrrn\",\"usersCards\":\"Users_usersCards__1XKOf\",\"head\":\"Users_head__2WpLT\",\"activeLink\":\"Users_activeLink__3hL2J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Posts_title__CRr3c\",\"wrapper\":\"Posts_wrapper__1AoFy\",\"posts\":\"Posts_posts__1kCjW\",\"post\":\"Posts_post__26OA8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2FMmB\",\"item\":\"Navbar_item__1DxO0\",\"activeLink\":\"Navbar_activeLink__BUrLk\"};"],"sourceRoot":""}